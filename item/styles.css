main {
  --header-height: 0pt;

  width: 100%;
  min-height: 100%;
  margin-top: var(--header-height);
}

/* Mobile Close Button */
.closeButton {
  position: fixed;
  left: 50%;
  bottom: 20pt;
  transform: translate(-50%, 0);
  background: var(--content-background-color);
  box-shadow: 0 0 5pt var(--shadow-color);
  border-radius: 15pt;
  width: auto;
  height: 30pt;
  display: flex;
  justify-content: center;
  align-items: center;
  cursor: pointer;
  padding: 5pt 10pt;
  z-index: 5;
  transition: opacity 0.2s ease, transform 0.2s ease;
}

.closeButton.hidden {
  display: flex !important;
  pointer-events: none;
  cursor: default;
  opacity: 0;
  transform: translate(-50%, 100%);
}

.closeButton p {
  display: block;
  margin: 0 0 0 2pt;
}

.itemInfoContainer {
  padding-bottom: 70pt !important;
}

/* Narrow Desktop Close Button */
@media (hover: hover) {
  .closeButton {
    top: 15pt;
    left: 15pt;
    bottom: auto;
    transform: none;
    border-radius: 50%;
    width: 22.5pt;
    height: 22.5pt;
    padding: 0;
    z-index: 5;
    transition: opacity 0.2s ease, background 0.2s ease;
  }

  .closeButton:hover {
    background: var(--content-background-color);
  }

  .closeButton.hidden {
    opacity: 0;
    pointer-events: none;
    cursor: default;
    transform: none;
  }

  .closeButton p {
    display: none;
  }

  .itemInfoContainer {
    padding-bottom: 20pt !important;
  }
}

.contentContainer {
  width: 100%;
  position: sticky;
  top: var(--header-height);
  z-index: 1;
}

.contentContainer>* {
  width: 100%;
  display: flex;
  justify-content: center;
  align-items: center;
}

.loadingScreen {
  height: calc(100vh - var(--header-height));
}

.errorScreen {
  height: calc(100vh - var(--header-height));
}

.errorMessageContainer {
  display: flex;
  flex-direction: column;
  justify-content: center;
  align-items: center;
}

.errorMessageContainer p {
  margin: 10pt 0 0 0;
  font-weight: bold;
  max-width: 100pt;
  text-align: center;
}

.contentContainer .contentDisplay {
  width: 100%;
  height: auto;
  max-height: calc(100vh - var(--header-height));
  background: var(--content-background-color);
  overflow: hidden;
  transition: all 0.7s cubic-bezier(0.075, 0.82, 0.165, 1);
  position: sticky;
  top: var(--header-height);
}

.contentContainer .contentDisplay.invisible {
  opacity: 0;
  transform: translateY(100pt);
}

.contentContainer .contentDisplay h1,
.contentContainer .contentDisplay h2 {
  padding: 0 20pt;
}

.contentContainer .contentDisplay>img {
  width: 100%;
  height: auto;
  object-fit: contain;
}

.contentDisplay .thumbnail~.loadingContainer {
  position: absolute;
  bottom: 10pt;
  left: 50%;
  transform: translate(-50%, 0);
  background: var(--content-background-color);
  border-radius: 5pt;
  display: flex;
  justify-content: center;
  align-items: center;
  padding: 10pt;
  height: 35pt;
  transition: opacity 0.2s ease;
  cursor: none;
}

.contentDisplay .thumbnail~.loadingContainer:hover {
  opacity: 0;
}

.contentDisplay .thumbnail~.loadingContainer .loadingAnimationContainer {
  position: absolute;
  left: -5pt;
  top: calc(50% + 1pt);
  transform: translate(0, -50%) scale(0.5);
}

.contentDisplay .thumbnail~.loadingContainer p {
  margin: 0 0 0 35pt;
}

.contentDisplay .videoContainer {
  width: 100%;
  height: 0;
  position: relative;
  padding-bottom: 56.25%;
}

.contentDisplay .videoContainer iframe {
  width: 100%;
  height: 100%;
  position: absolute;
  top: 0;
  left: 0;
}

.audioControls {
  width: 100%;
  padding: 10pt;
  background: var(--content-background-color);
  transition: all 0.5s cubic-bezier(0.075, 0.82, 0.165, 1);
  font-family: "Roboto Mono", monospace;
}

@media (cursor: cursor) {
  .contentDisplay:has(.audioControls) {
    padding-top: 35pt;
  }
}

.audioControls .info {
  display: flex;
  justify-content: space-between;
  align-items: center;
  margin-bottom: 10pt;
}

.audioControls .info .left,
.audioControls .info .right {
  display: flex;
  justify-content: center;
  align-items: center;
  gap: 5pt;
}

.audioControls button {
  background: var(--page-background-color);
  color: var(--primary-text-color);
  border: none;
  border-radius: 50%;
  width: 30pt;
  height: 30pt;
  cursor: pointer;
  display: flex;
  justify-content: center;
  align-items: center;
  transition: background 0.2s ease;
}

.audioControls button:not(.playStateButton) {
  transform: scale(0.8);
}

.audioControls button:hover {
  background: var(--secondary-content-background-color);
}

.audioControls button.active {
  background: var(--color-1);
  color: black;
}

.audioControls button.active .gg-repeat {
  box-shadow: -2px -2px 0 0,
    2px 2px 0 0 black;
}

.audioControls .playStateButton .loadingContainer {
  transform: scale(0.3);
}

.audioControls .progressBar {
  height: 10pt;
  margin: 10px 0 0 0;
  border-radius: 10pt;
  position: relative;
  background: var(--page-background-color);
}

.audioControls .progressBar .barWrapper {
  position: relative;
  width: 100%;
  height: 10pt;
  border-radius: 10pt;
  overflow: hidden;
}

.audioControls .progressBar .barWrapper * {
  border-radius: 10pt 0 0 10pt;
  height: 100%;
  width: 0;
  position: absolute;
  top: 0;
  left: 0;
}

.audioControls .progressBar .progress {
  background: var(--color-1);
}

.audioControls .progressBar .buffered {
  background: var(--secondary-content-background-color);
}

.audioControls .progressBar .progressBarInput {
  width: 100%;
  position: absolute;
  height: 20px;
  top: 0;
  margin-top: -4px;
  left: 0;
}

.audioControls .progressBar .progressBarInput::-webkit-slider-thumb {
  border: 2px solid var(--page-background-color);
  height: 30px;
  width: 10px;
  border-radius: 3px;
  background: var(--secondary-text-color);
  cursor: pointer;
  border-radius: 30px;
  margin-left: -3px;
}

input[type="range"] {
  -webkit-appearance: none;
  background: transparent;
}

input[type="range"]::-webkit-slider-thumb {
  -webkit-appearance: none;
  transition: transform 0.2s;
}

input[type="range"]::-webkit-slider-thumb:hover {
  transform: scale(1.2);
}

.itemInfoContainer {
  padding: 20pt;
  transition: all 1s cubic-bezier(0.075, 0.82, 0.165, 1);
}

.itemInfoContainer.hidden {
  display: block !important;
  opacity: 0;
  pointer-events: none;
  transform: translateY(100pt);
}

.locationContainer {
  display: flex;
  justify-content: flex-start;
  align-items: center;
  cursor: default;
  gap: 20pt;
}

.locationContainer div {
  display: flex;
  justify-content: center;
  align-items: center;
  gap: 5pt;
}

.locationContainer div h2 {
  margin: 0;
}

.locationContainer .sceneContainer i {
  transform: translateX(-4pt);
}

.name {
  margin: 2pt 0 5pt 0;
}

.itemInfoContainer .description {
  margin: 5pt 0 10pt 0;
}

.itemInfoContainer .propertiesContainer {
  display: grid;
  grid-template-columns: 1fr;
}

.propertiesContainer div.property {
  min-width: 100%;
  display: flex;
  align-items: center;
  justify-content: flex-start;
  gap: 5pt;
  margin: 0 0 10pt 0;
}

.propertiesContainer div.property .iconContainer,
.labelContainer .iconContainer {
  min-width: 20pt;
  height: 20pt;
  display: flex;
  align-items: center;
  justify-content: center;
}

.propertiesContainer div.property p,
.tags p.tag {
  margin: 0;
}

.propertiesContainer div.property p.button,
.tags p.tag {
  background: var(--content-background-color);
  color: var(--primary-text-color);
  padding: 2pt 5pt;
  border-radius: 5pt;
  cursor: pointer;
}

.propertiesContainer div.property p.button {
  overflow: hidden;
  text-overflow: ellipsis;
}

.tags,
.linkedItems {
  margin-bottom: 10pt;
}

.itemInfoContainer .labelContainer {
  display: flex;
  align-items: center;
  justify-content: flex-start;
  gap: 5pt;
  margin: 0 0 5pt 0;
  font-weight: bold;
}

.itemInfoContainer .labelContainer p {
  margin: 0;
}

.tagsContainer,
.itemsContainer {
  width: 100%;
  display: flex;
  align-items: center;
  justify-content: flex-start;
  gap: 5pt;
  overflow-x: auto;
}

.itemInfoContainer .metadata {
  background: var(--content-background-color);
  width: 100%;
  padding: 10pt;
  border-radius: 10pt;
  margin-bottom: 10pt;
}

.itemInfoContainer .metadata p {
  margin: 0;
}

.itemInfoContainer .metadata .header {
  display: flex;
  align-items: center;
  justify-content: space-between;
}

.itemInfoContainer .metadata .header p {
  white-space: nowrap;
  overflow: hidden;
  text-overflow: ellipsis;
}

.itemInfoContainer .metadata .header .device {
  display: flex;
  align-items: center;
  justify-content: flex-start;
}

.itemInfoContainer .metadata .header .device .make {
  margin-right: 5pt;
  background: var(--secondary-content-background-color);
  padding: 5pt;
  border-radius: 5pt;
}

.itemInfoContainer .metadata .content {
  margin-top: 10pt;
  display: flex;
  align-items: center;
  justify-content: space-between;
  flex-wrap: wrap;
  gap: 5pt;
}

.itemInfoContainer .metadata .content div {
  border: 2pt solid var(--secondary-content-background-color);
  padding: 5pt;
  border-radius: 5pt;
  display: flex;
  align-items: center;
  justify-content: center;
  flex-grow: 1;
}

.itemInfoContainer .metadata .content p {
  margin-left: 5pt;
}

.buttonContainer {
  display: flex;
  align-items: center;
  justify-content: space-between;
  gap: 10pt;
}

.buttonContainer button {
  width: 100%;
  background: var(--content-background-color);
  color: var(--primary-text-color);
  border: none;
  border-radius: 10pt;
  font-family: inherit;
  font-weight: bold;
  font-size: 10pt;
  padding: 10pt 0;
  cursor: pointer;
  margin-bottom: 5pt;
  display: flex;
  justify-content: center;
  transition: 0.1s ease background;
}

.buttonContainer button:hover {
  background: var(--page-background-color);
}

.buttonContainer button span {
  margin-left: 5pt;
}

@media only screen and (min-width: 900px) {
  main {
    display: grid;
    min-height: calc(100vh - var(--header-height));
    height: auto;
    grid-template-columns: 1fr 1fr;
    grid-template-rows: 1fr;
  }

  main header {
    grid-column: 1 / 3;
  }

  main> :not(header) {
    min-width: 0;
  }

  main> :not(header) {
    min-width: 0;
  }

  @media (cursor: cursor) {
    .contentDisplay:has(.audioControls) {
      padding-top: 0;
    }
  }

  .contentContainer {
    min-height: calc(100vh - var(--header-height));
    height: 100%;
  }

  .contentContainer .contentDisplay {
    height: 100%;
  }

  .itemInfoContainer .propertiesContainer {
    grid-template-columns: 1fr 1fr;
  }
}

@media only screen and (max-width: 560px) {
  .buttonContainer {
    flex-direction: column;
    gap: 5pt;
    margin-top: 10pt;
  }

  .buttonContainer button {
    width: 100%;
    margin: 0;
  }
}